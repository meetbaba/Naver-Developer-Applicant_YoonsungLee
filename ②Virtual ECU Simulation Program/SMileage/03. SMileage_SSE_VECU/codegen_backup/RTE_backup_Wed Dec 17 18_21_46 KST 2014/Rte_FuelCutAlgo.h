/** @file     Rte_FuelCutAlgo.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.4.1  (R4.0 backend version: v7.1.31 (Build 33134))
  *           at Wed Dec 17 18:15:49 2014
  */

#ifndef RTE_FUELCUTALGO_H
#define RTE_FUELCUTALGO_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_FuelCutAlgo_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if !defined(RTE_RUNNABLEAPI_RE_SetAccelerate) && !defined(RTE_RUNNABLEAPI_RE_SetBrake) && !defined(RTE_RUNNABLEAPI_RE_SetCoolantTemperature) && !defined(RTE_RUNNABLEAPI_RE_SetCrankshaftPosition) && !defined(RTE_RUNNABLEAPI_RE_SetFuelCutAction) && !defined(RTE_RUNNABLEAPI_RE_SetGear) && !defined(RTE_RUNNABLEAPI_RE_SetGyro) && !defined(RTE_RUNNABLEAPI_RE_SetVehicleSpeed)
#define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_CS_IF_ACCELERATE_P;

typedef Rte_PDS_FuelCutAlgo_CS_IF_ACCELERATE_P Rte_PDS_FuelCutAlgo_CS_IF_ACCELERATE_PA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_CS_IF_BRAKE_P;

typedef Rte_PDS_FuelCutAlgo_CS_IF_BRAKE_P Rte_PDS_FuelCutAlgo_CS_IF_BRAKE_PA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_CS_IF_GEAR_P;

typedef Rte_PDS_FuelCutAlgo_CS_IF_GEAR_P Rte_PDS_FuelCutAlgo_CS_IF_GEAR_PA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_SR_IF_CP_PLS_R;

typedef Rte_PDS_FuelCutAlgo_SR_IF_CP_PLS_R Rte_PDS_FuelCutAlgo_SR_IF_CP_PLS_RA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_SR_IF_CT_PLS_R;

typedef Rte_PDS_FuelCutAlgo_SR_IF_CT_PLS_R Rte_PDS_FuelCutAlgo_SR_IF_CT_PLS_RA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_SR_IF_FUELCUT_ACTION_P;

typedef Rte_PDS_FuelCutAlgo_SR_IF_FUELCUT_ACTION_P Rte_PDS_FuelCutAlgo_SR_IF_FUELCUT_ACTION_PA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_SR_IF_GYRO_PLS_R;

typedef Rte_PDS_FuelCutAlgo_SR_IF_GYRO_PLS_R Rte_PDS_FuelCutAlgo_SR_IF_GYRO_PLS_RA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutAlgo_SR_IF_VS_PLS_R;

typedef Rte_PDS_FuelCutAlgo_SR_IF_VS_PLS_R Rte_PDS_FuelCutAlgo_SR_IF_VS_PLS_RA[1];

struct Rte_CDS_FuelCutAlgo {
   /* Data handles */
   P2VAR(Rte_DE_float32                                                           , AUTOMATIC, RTE_DATA) RE_SetCoolantTemperature_RPortCTPLS_coolantTemperature_pls;
   P2VAR(Rte_DE_float32                                                           , AUTOMATIC, RTE_DATA) RE_SetCrankshaftPosition_RPortCPPLS_crankshaftPosition_pls;
   P2VAR(Rte_DE_uint8                                                             , AUTOMATIC, RTE_DATA) RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction;
   P2VAR(Rte_DE_float32                                                           , AUTOMATIC, RTE_DATA) RE_SetGyro_RPortGyroPLS_gyro_pls;
   P2VAR(Rte_DE_float32                                                           , AUTOMATIC, RTE_DATA) RE_SetVehicleSpeed_RPortVSPLS_vehicleSpeed_pls;
   /* Port Data Structure Arrays */
   Rte_PDS_FuelCutAlgo_CS_IF_ACCELERATE_PA                                   PPortAccelerate;
   Rte_PDS_FuelCutAlgo_CS_IF_BRAKE_PA                                        PPortBrake;
   Rte_PDS_FuelCutAlgo_CS_IF_GEAR_PA                                         PPortGear;
   Rte_PDS_FuelCutAlgo_SR_IF_CP_PLS_RA                                       RPortCPPLS;
   Rte_PDS_FuelCutAlgo_SR_IF_CT_PLS_RA                                       RPortCTPLS;
   Rte_PDS_FuelCutAlgo_SR_IF_FUELCUT_ACTION_PA                               PPortFuelCutAction;
   Rte_PDS_FuelCutAlgo_SR_IF_GYRO_PLS_RA                                     RPortGyroPLS;
   Rte_PDS_FuelCutAlgo_SR_IF_VS_PLS_RA                                       RPortVSPLS;
   /* Inter-runnable variable API */
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_AccelerateLevel          IrvRead_RE_SetFuelCutAction_eX_AccelerateLevel;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_BrakeLevel               IrvRead_RE_SetFuelCutAction_eX_BrakeLevel;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_CoolantTemperature       IrvRead_RE_SetFuelCutAction_eX_CoolantTemperature;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_CrankshaftPosition       IrvRead_RE_SetFuelCutAction_eX_CrankshaftPosition;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_GearLevel                IrvRead_RE_SetFuelCutAction_eX_GearLevel;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_Gyro                     IrvRead_RE_SetFuelCutAction_eX_Gyro;
   Rte_IrvReadFP_FuelCutAlgo_RE_SetFuelCutAction_eX_VehicleSpeed             IrvRead_RE_SetFuelCutAction_eX_VehicleSpeed;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetAccelerate_eX_AccelerateLevel            IrvWrite_RE_SetAccelerate_eX_AccelerateLevel;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetBrake_eX_BrakeLevel                      IrvWrite_RE_SetBrake_eX_BrakeLevel;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetCoolantTemperature_eX_CoolantTemperature IrvWrite_RE_SetCoolantTemperature_eX_CoolantTemperature;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetCrankshaftPosition_eX_CrankshaftPosition IrvWrite_RE_SetCrankshaftPosition_eX_CrankshaftPosition;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetGear_eX_GearLevel                        IrvWrite_RE_SetGear_eX_GearLevel;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetGyro_eX_Gyro                             IrvWrite_RE_SetGyro_eX_Gyro;
   Rte_IrvWriteFP_FuelCutAlgo_RE_SetVehicleSpeed_eX_VehicleSpeed             IrvWrite_RE_SetVehicleSpeed_eX_VehicleSpeed;
};
typedef struct Rte_CDS_FuelCutAlgo Rte_CDS_FuelCutAlgo;

/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
#ifndef RTE_CORE
typedef P2CONST(Rte_PDS_FuelCutAlgo_CS_IF_ACCELERATE_P, AUTOMATIC, RTE_CONST) Rte_PortHandle_CS_IF_ACCELERATE_P;

typedef P2CONST(Rte_PDS_FuelCutAlgo_CS_IF_BRAKE_P, AUTOMATIC, RTE_CONST) Rte_PortHandle_CS_IF_BRAKE_P;

typedef P2CONST(Rte_PDS_FuelCutAlgo_CS_IF_GEAR_P, AUTOMATIC, RTE_CONST) Rte_PortHandle_CS_IF_GEAR_P;

typedef P2CONST(Rte_PDS_FuelCutAlgo_SR_IF_CP_PLS_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_CP_PLS_R;

typedef P2CONST(Rte_PDS_FuelCutAlgo_SR_IF_CT_PLS_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_CT_PLS_R;

typedef P2CONST(Rte_PDS_FuelCutAlgo_SR_IF_FUELCUT_ACTION_P, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_FUELCUT_ACTION_P;

typedef P2CONST(Rte_PDS_FuelCutAlgo_SR_IF_GYRO_PLS_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_GYRO_PLS_R;

typedef P2CONST(Rte_PDS_FuelCutAlgo_SR_IF_VS_PLS_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_VS_PLS_R;

#endif /* RTE_CORE */

/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_FuelCutAlgo, RTE_CONST) Rte_Instance_SwComponentPrototype_FuelCutAlgo;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_FuelCutAlgo, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetCoolantTemperature)
/* Inline read optimization; Rte_IRead_RE_SetCoolantTemperature_RPortCTPLS_coolantTemperature_pls to implicit access macro */
#define Rte_IRead_RE_SetCoolantTemperature_RPortCTPLS_coolantTemperature_pls( self )  ( ((self->RE_SetCoolantTemperature_RPortCTPLS_coolantTemperature_pls)->value) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetCrankshaftPosition)
/* Inline read optimization; Rte_IRead_RE_SetCrankshaftPosition_RPortCPPLS_crankshaftPosition_pls to implicit access macro */
#define Rte_IRead_RE_SetCrankshaftPosition_RPortCPPLS_crankshaftPosition_pls( self )  ( ((self->RE_SetCrankshaftPosition_RPortCPPLS_crankshaftPosition_pls)->value) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetGyro)
/* Inline read optimization; Rte_IRead_RE_SetGyro_RPortGyroPLS_gyro_pls to implicit access macro */
#define Rte_IRead_RE_SetGyro_RPortGyroPLS_gyro_pls( self )  ( ((self->RE_SetGyro_RPortGyroPLS_gyro_pls)->value) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetVehicleSpeed)
/* Inline read optimization; Rte_IRead_RE_SetVehicleSpeed_RPortVSPLS_vehicleSpeed_pls to implicit access macro */
#define Rte_IRead_RE_SetVehicleSpeed_RPortVSPLS_vehicleSpeed_pls( self )  ( ((self->RE_SetVehicleSpeed_RPortVSPLS_vehicleSpeed_pls)->value) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetFuelCutAction)
/* Inline write optimization; Rte_IWriteRef_RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction to implicit access macro */
#define Rte_IWriteRef_RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction( self )  ( &((self->RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction)->value) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_SetFuelCutAction)
/* Inline write optimization; Rte_IWrite_RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction to implicit access macro */
#define Rte_IWrite_RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction( self, data )  ( ((self->RE_SetFuelCutAction_PPortFuelCutAction_fuelCutAction)->value) = (data) )
#endif

/* Rte_Irv API (explicit access) */
#define Rte_IrvRead_RE_SetFuelCutAction_eX_AccelerateLevel(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_AccelerateLevel())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_BrakeLevel(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_BrakeLevel())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_CoolantTemperature(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_CoolantTemperature())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_CrankshaftPosition(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_CrankshaftPosition())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_GearLevel(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_GearLevel())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_Gyro(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_Gyro())
#define Rte_IrvRead_RE_SetFuelCutAction_eX_VehicleSpeed(self) ((self)->IrvRead_RE_SetFuelCutAction_eX_VehicleSpeed())
#define Rte_IrvWrite_RE_SetAccelerate_eX_AccelerateLevel(self, data) ((self)->IrvWrite_RE_SetAccelerate_eX_AccelerateLevel(data))
#define Rte_IrvWrite_RE_SetBrake_eX_BrakeLevel(self, data) ((self)->IrvWrite_RE_SetBrake_eX_BrakeLevel(data))
#define Rte_IrvWrite_RE_SetCoolantTemperature_eX_CoolantTemperature(self, data) ((self)->IrvWrite_RE_SetCoolantTemperature_eX_CoolantTemperature(data))
#define Rte_IrvWrite_RE_SetCrankshaftPosition_eX_CrankshaftPosition(self, data) ((self)->IrvWrite_RE_SetCrankshaftPosition_eX_CrankshaftPosition(data))
#define Rte_IrvWrite_RE_SetGear_eX_GearLevel(self, data) ((self)->IrvWrite_RE_SetGear_eX_GearLevel(data))
#define Rte_IrvWrite_RE_SetGyro_eX_Gyro(self, data) ((self)->IrvWrite_RE_SetGyro_eX_Gyro(data))
#define Rte_IrvWrite_RE_SetVehicleSpeed_eX_VehicleSpeed(self, data) ((self)->IrvWrite_RE_SetVehicleSpeed_eX_VehicleSpeed(data))

/* Rte_Port API */
#define Rte_Port_PPortAccelerate(self) ((Rte_PortHandle_CS_IF_ACCELERATE_P)&((self)->PPortAccelerate[0]))
#define Rte_Port_PPortBrake(self) ((Rte_PortHandle_CS_IF_BRAKE_P)&((self)->PPortBrake[0]))
#define Rte_Port_PPortGear(self) ((Rte_PortHandle_CS_IF_GEAR_P)&((self)->PPortGear[0]))
#define Rte_Port_RPortCPPLS(self) ((Rte_PortHandle_SR_IF_CP_PLS_R)&((self)->RPortCPPLS[0]))
#define Rte_Port_RPortCTPLS(self) ((Rte_PortHandle_SR_IF_CT_PLS_R)&((self)->RPortCTPLS[0]))
#define Rte_Port_PPortFuelCutAction(self) ((Rte_PortHandle_SR_IF_FUELCUT_ACTION_P)&((self)->PPortFuelCutAction[0]))
#define Rte_Port_RPortGyroPLS(self) ((Rte_PortHandle_SR_IF_GYRO_PLS_R)&((self)->RPortGyroPLS[0]))
#define Rte_Port_RPortVSPLS(self) ((Rte_PortHandle_SR_IF_VS_PLS_R)&((self)->RPortVSPLS[0]))

/* Rte_NPorts API */
#define Rte_NPorts_CS_IF_ACCELERATE_P(self) ((uint8)1)
#define Rte_NPorts_CS_IF_BRAKE_P(self) ((uint8)1)
#define Rte_NPorts_CS_IF_GEAR_P(self) ((uint8)1)
#define Rte_NPorts_SR_IF_CP_PLS_R(self) ((uint8)1)
#define Rte_NPorts_SR_IF_CT_PLS_R(self) ((uint8)1)
#define Rte_NPorts_SR_IF_FUELCUT_ACTION_P(self) ((uint8)1)
#define Rte_NPorts_SR_IF_GYRO_PLS_R(self) ((uint8)1)
#define Rte_NPorts_SR_IF_VS_PLS_R(self) ((uint8)1)

/* Rte_Ports API */
#define Rte_Ports_CS_IF_ACCELERATE_P(self) ((Rte_PortHandle_CS_IF_ACCELERATE_P)&((self)->PPortAccelerate[0]))
#define Rte_Ports_CS_IF_BRAKE_P(self) ((Rte_PortHandle_CS_IF_BRAKE_P)&((self)->PPortBrake[0]))
#define Rte_Ports_CS_IF_GEAR_P(self) ((Rte_PortHandle_CS_IF_GEAR_P)&((self)->PPortGear[0]))
#define Rte_Ports_SR_IF_CP_PLS_R(self) ((Rte_PortHandle_SR_IF_CP_PLS_R)&((self)->RPortCPPLS[0]))
#define Rte_Ports_SR_IF_CT_PLS_R(self) ((Rte_PortHandle_SR_IF_CT_PLS_R)&((self)->RPortCTPLS[0]))
#define Rte_Ports_SR_IF_FUELCUT_ACTION_P(self) ((Rte_PortHandle_SR_IF_FUELCUT_ACTION_P)&((self)->PPortFuelCutAction[0]))
#define Rte_Ports_SR_IF_GYRO_PLS_R(self) ((Rte_PortHandle_SR_IF_GYRO_PLS_R)&((self)->RPortGyroPLS[0]))
#define Rte_Ports_SR_IF_VS_PLS_R(self) ((Rte_PortHandle_SR_IF_VS_PLS_R)&((self)->RPortVSPLS[0]))

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetCoolantTemperature(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetCrankshaftPosition(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetGyro(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetVehicleSpeed(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetAccelerate(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self,
                                           VAR(uint8, AUTOMATIC) accelerateLevel);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetBrake(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self,
                                      VAR(uint8, AUTOMATIC) brakeLevel);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetGear(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self,
                                     VAR(uint8, AUTOMATIC) gearLevel);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
#define FuelCutAlgo_START_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutAlgo_CODE) SetFuelCutAction(CONST(Rte_SelfType_FuelCutAlgo, AUTOMATIC) self);
#define FuelCutAlgo_STOP_SEC_CODE
#include "FuelCutAlgo_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* RTE_FUELCUTALGO_H */
