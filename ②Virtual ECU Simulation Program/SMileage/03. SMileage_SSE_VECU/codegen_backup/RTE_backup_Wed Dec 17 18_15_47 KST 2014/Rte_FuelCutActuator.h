/** @file     Rte_FuelCutActuator.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.4.1  (R4.0 backend version: v7.1.31 (Build 33134))
  *           at Wed Dec 17 18:13:28 2014
  */

#ifndef RTE_FUELCUTACTUATOR_H
#define RTE_FUELCUTACTUATOR_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_FuelCutActuator_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if !defined(RTE_RUNNABLEAPI_RE_FuelCutActuator)
#define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
typedef struct {
   Rte_CallFP_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_SetFuelCutState   Call_SetFuelCutState;
   Rte_ResultFP_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_SetFuelCutState Result_SetFuelCutState;
} Rte_PDS_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_R;

typedef Rte_PDS_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_R Rte_PDS_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_RA[1];

typedef struct {
   uint8 _dummy;
} Rte_PDS_FuelCutActuator_SR_IF_FUELCUT_ACTION_R;

typedef Rte_PDS_FuelCutActuator_SR_IF_FUELCUT_ACTION_R Rte_PDS_FuelCutActuator_SR_IF_FUELCUT_ACTION_RA[1];

struct Rte_CDS_FuelCutActuator {
   /* Data handles */
   P2VAR(Rte_DE_uint8                                      , AUTOMATIC, RTE_DATA) RE_FuelCutActuator_RPortFuelCutAction_fuelCutAction;
   /* Port Data Structure Arrays */
   Rte_PDS_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_RA RPortSetFuelCutState;
   Rte_PDS_FuelCutActuator_SR_IF_FUELCUT_ACTION_RA    RPortFuelCutAction;
};
typedef struct Rte_CDS_FuelCutActuator Rte_CDS_FuelCutActuator;

/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
#ifndef RTE_CORE
typedef P2CONST(Rte_PDS_FuelCutActuator_CS_IF_SET_FUELCUT_STATE_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_CS_IF_SET_FUELCUT_STATE_R;

typedef P2CONST(Rte_PDS_FuelCutActuator_SR_IF_FUELCUT_ACTION_R, AUTOMATIC, RTE_CONST) Rte_PortHandle_SR_IF_FUELCUT_ACTION_R;

#endif /* RTE_CORE */

/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_FuelCutActuator, RTE_CONST) Rte_Instance_SwComponentPrototype_FuelCutActuator;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_FuelCutActuator, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE) Rte_Call_SwComponentPrototype_FuelCutActuator_RPortSetFuelCutState_SetFuelCutState(VAR(uint8, AUTOMATIC) fuelCutState);
FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE) Rte_Result_SwComponentPrototype_FuelCutActuator_RPortSetFuelCutState_SetFuelCutState(void);
#define RTE_STOP_SEC_CODE
#include "MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_FuelCutActuator)
#define Rte_Call_RPortSetFuelCutState_SetFuelCutState( self, fuelCutState ) (Rte_Call_SwComponentPrototype_FuelCutActuator_RPortSetFuelCutState_SetFuelCutState(fuelCutState))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_FuelCutActuator)
/* Inline read optimization; Rte_IRead_RE_FuelCutActuator_RPortFuelCutAction_fuelCutAction to implicit access macro */
#define Rte_IRead_RE_FuelCutActuator_RPortFuelCutAction_fuelCutAction( self )  ( ((self->RE_FuelCutActuator_RPortFuelCutAction_fuelCutAction)->value) )
#endif
#define Rte_Result_RPortSetFuelCutState_SetFuelCutState( self ) (Rte_Result_SwComponentPrototype_FuelCutActuator_RPortSetFuelCutState_SetFuelCutState())

/* Rte_Port API */
#define Rte_Port_RPortSetFuelCutState(self) ((Rte_PortHandle_CS_IF_SET_FUELCUT_STATE_R)&((self)->RPortSetFuelCutState[0]))
#define Rte_Port_RPortFuelCutAction(self) ((Rte_PortHandle_SR_IF_FUELCUT_ACTION_R)&((self)->RPortFuelCutAction[0]))

/* Rte_NPorts API */
#define Rte_NPorts_CS_IF_SET_FUELCUT_STATE_R(self) ((uint8)1)
#define Rte_NPorts_SR_IF_FUELCUT_ACTION_R(self) ((uint8)1)

/* Rte_Ports API */
#define Rte_Ports_CS_IF_SET_FUELCUT_STATE_R(self) ((Rte_PortHandle_CS_IF_SET_FUELCUT_STATE_R)&((self)->RPortSetFuelCutState[0]))
#define Rte_Ports_SR_IF_FUELCUT_ACTION_R(self) ((Rte_PortHandle_SR_IF_FUELCUT_ACTION_R)&((self)->RPortFuelCutAction[0]))

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define FuelCutActuator_START_SEC_CODE
#include "FuelCutActuator_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, FuelCutActuator_CODE) FuelCutActuator(CONST(Rte_SelfType_FuelCutActuator, AUTOMATIC) self);
#define FuelCutActuator_STOP_SEC_CODE
#include "FuelCutActuator_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* RTE_FUELCUTACTUATOR_H */
